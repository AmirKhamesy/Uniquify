{"version":3,"sources":["Components/Song.js","Components/Compare.js","Pages/Home.js","Pages/LandingPage.js","serviceWorker.js","index.js"],"names":["Song","props","id","this","name","style","fontWeight","repeated","margin","split","Component","Compare","handleButtonClick","req","URL","document","getElementById","display","searchParams","append","state","list1","list2","fetch","then","res","json","console","log","comparePlaylist","songs1","songs2","addPlaylistName","playlistName1","playlistName2","showRepeated","AOS","init","p1","p2","setState","s1","s2","undefined","array1","map","songItem","dup","includes","array2","alert","event","target","value","pID","replace","substr","songs","filter","song","className","CompareStyles","wrapper","type","onChange","changeInput1","changeInput2","onClick","title","hideNonUnique","bind","filterSongs","data-aos","key","Math","random","Home","LandingPage","color","Boolean","window","location","hostname","match","styles","link","textDecoration","ReactDOM","render","StrictMode","Box","direction","justify","right","to","height","round","elevation","width","overflow","Image","src","path","exact","component","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6336bff1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nexport default class Song extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li id={this.props.name} style={{ fontWeight: this.props.repeated ? 500 : 800, margin: \"1%\" }}>\r\n                {this.props.name.split('\\n\\n')[0]}<br></br>\r\n                <text>{this.props.name.split('\\n\\n')[1]}</text>\r\n            </li>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CompareStyles from \"../CSS/Compare.module.css\";\r\nimport Song from \"./Song\";\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n\r\nexport default class Compare extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // list1: \"3wgGItoJDDLMDUBCdYBQ2d\",\r\n            list1: \"37i9dQZF1DWXT8uSSn6PRy\",\r\n            list2: \"37i9dQZF1DXcBWIGoYBM5M\",\r\n            // list2: \"2uwblsTCKkwr4fyTMh2qeI\",\r\n            songs1: [],\r\n            songs2: [],\r\n            // showRepeated: true,\r\n            showRepeated: \"all\",\r\n            playlistName1: \"\",\r\n            playlistName2: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AOS.init()\r\n    }\r\n\r\n    addPlaylistName(p1, p2) {\r\n        if (p1, p2) {\r\n            this.setState({\r\n                playlistName1: p1,\r\n                playlistName2: p2\r\n            });\r\n        }\r\n    }\r\n\r\n    comparePlaylist(s1, s2) {\r\n        if (s1 === undefined || s2 === undefined) {\r\n            alert(\"Invalid playlist ID, please try again!\");\r\n            return;\r\n        }\r\n        let array1 = s1.map(songItem => {\r\n            let dup = false;\r\n            if (s2.includes(songItem)) dup = true\r\n            return {\r\n                name: songItem,\r\n                repeated: dup\r\n            }\r\n        })\r\n        let array2 = s2.map(songItem => {\r\n            let dup = false;\r\n            if (s1.includes(songItem)) dup = true\r\n            return {\r\n                name: songItem,\r\n                repeated: dup\r\n            }\r\n        })\r\n        this.setState({\r\n            songs1: array1,\r\n            songs2: array2\r\n        })\r\n    }\r\n    //Starts the comparison \r\n    handleButtonClick = () => {\r\n        const req = new URL(\"https://uniquify.herokuapp.com/compare/\");\r\n        document.getElementById('loader').style.display = 'block';\r\n        req.searchParams.append(\"song1\", this.state.list1);\r\n        req.searchParams.append(\"song2\", this.state.list2);\r\n        try {\r\n            fetch(req)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    this.comparePlaylist(res.songs1, res.songs2);\r\n                    this.addPlaylistName(res.playlistName1, res.playlistName2);\r\n                    document.getElementById('loader').style.display = 'none';\r\n                })\r\n        } catch {\r\n            console.log(\"failed to fetch\");\r\n        }\r\n    }\r\n\r\n    hideNonUnique() {\r\n        if (this.state.repeated === \"all\") {\r\n            this.setState({\r\n                repeated: \"unique\"\r\n            })\r\n        } else if (this.state.repeated === \"unique\") {\r\n            this.setState({\r\n                repeated: \"repeated\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                repeated: \"all\"\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInput1(event) {\r\n        //Change playlist ID URI\r\n        if (event.target.value.includes(\"spotify:playlist:\")) {\r\n            var pID = event.target.value.replace(\"spotify:playlist:\", \"\");\r\n            this.setState({ list1: pID });\r\n            //Chance playlist ID link\r\n        } else if (event.target.value.includes(\"https://open.spotify.com/playlist/\")) {\r\n            var pID = event.target.value.substr(34, 22);\r\n            this.setState({ list1: pID });\r\n            //Assume its raw playlist ID\r\n        } else {\r\n            this.setState({ list1: event.target.value });\r\n        }\r\n    }\r\n    changeInput2(event) {\r\n        //Change playlist ID URI\r\n        if (event.target.value.includes(\"spotify:playlist:\")) {\r\n            var pID = event.target.value.replace(\"spotify:playlist:\", \"\");\r\n            this.setState({ list2: pID });\r\n            //Chance playlist ID link\r\n        } else if (event.target.value.includes(\"https://open.spotify.com/playlist/\")) {\r\n            var pID = event.target.value.substr(34, 22);\r\n            this.setState({ list2: pID });\r\n            //Assume its raw playlist ID\r\n        } else {\r\n            this.setState({ list2: event.target.value });\r\n        }\r\n    }\r\n    filterSongs(songs) {\r\n        if (this.state.repeated === \"all\") {\r\n            return songs.filter(song => !song.repeated)\r\n        } else if (this.state.repeated === \"unique\") {\r\n            return songs.filter(song => song.repeated)\r\n        } else {\r\n            return songs\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={CompareStyles.wrapper} id={CompareStyles.wrapper} >\r\n\r\n                {/* \r\n                <h3>Welcome to Uniquify!</h3><br></br>\r\n                <p>To get started simply put two <i>public</i> Spotify playlists links which can be located under \"share\"</p>\r\n                <p>Once playlists are loaded, clicking on either playlist the will cycle from: all songs, <b>Unique songs</b> and repeated songs</p>\r\n                <p>PS. You can click Get list without inserting any playlists to compare two sample playlists!</p> */}\r\n                <input type=\"text\" id='playList1' onChange={event => this.changeInput1(event)}></input>\r\n                <input type=\"text\" id='playList2' onChange={event => this.changeInput2(event)}></input><br></br>\r\n\r\n                <button onClick={this.handleButtonClick}>Get list</button><br></br>\r\n                <div id=\"loader\"></div>\r\n                <ol title={this.state.playlistName1} onClick={this.hideNonUnique.bind(this)}>\r\n                    {this.filterSongs(this.state.songs1).map(song => <div data-aos=\"fade-down\"><Song name={song[\"name\"]} repeated={song[\"repeated\"]} key={song[\"name\"] + Math.random()} /></div>)}\r\n                </ol>\r\n                <ol title={this.state.playlistName2} onClick={this.hideNonUnique.bind(this)}>\r\n                    {this.filterSongs(this.state.songs2).map(song => <div data-aos=\"fade-down\"><Song name={song[\"name\"]} repeated={song[\"repeated\"]} key={song[\"name\"] + Math.random() + 1.1} /></div>)}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport '../CSS/App.css';\nimport Compare from \"../Components/Compare\";\n\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <Compare />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\r\nimport \"../CSS/landingPage.module.css\"\r\n\r\n\r\nfunction LandingPage() {\r\n    return (\r\n        <div className='hi'>\r\n            <p style={{ color: 'white' }}>  landing page</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport Home from './Pages/Home';\nimport LandingPage from './Pages/LandingPage';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Box, Text, Image } from 'grommet'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport { StyleSheetManager } from 'styled-components';\n\nconst styles = {\n  link: {\n    textDecoration: 'none',\n    color: 'white',\n  },\n\n}\nAOS.init()\nReactDOM.render(\n\n  <React.StrictMode>\n    <Router>\n      <Box direction=\"row\" justify='between' margin={{ right: 'auto' }}>\n        <Box direction='column'>\n          <Link to=\"/\" style={styles.link}>\n            <Box data-aos=\"fade-down\" direction='row-responsive' className=\"typewriter\">\n              <h1>Uniquify</h1>\n            </Box>\n          </Link>\n        </Box>\n        <Box direction='column' >\n          <Link to=\"/compare\" style={styles.link}>\n            <Box\n              height=\"xsmall\"\n              round='medium'\n              elevation='xlarge'\n              width=\"xsmall\"\n              overflow='hidden'>\n              <Image src=\"https://cdn.shopify.com/app-store/listing_images/47509b0ae6effab2437add3d7c7dcfa9/icon/CNr7nL30lu8CEAE=.png\"></Image>\n            </Box>\n          </Link>\n        </Box>\n      </Box>\n      <Route path='/' exact component={LandingPage}></Route>\n      <Route path='/compare' exact component={Home}></Route>\n    </Router>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}