{"version":3,"sources":["Assets/LandingPagePic.png","Assets/LandingPagePic3.png","Components/Song.js","Components/LandingPage/index.jsx","Components/Compare.js","Pages/Home.js","serviceWorker.js","index.js"],"names":["module","exports","Songs","props","id","name","style","fontWeight","repeated","margin","split","StyledHomePage","styled","div","SytledImage","img","StyledButton","button","StyledHeaderText","h1","DetailsContainer","StyledDetailh2","h2","StyledDetailText","p","StyledImageTextContainer","flipped","TextComboContainer","TextComboDetails","AuthorCreds","a","LandingPage","show","onInit","typewriter","typeString","pauseFor","deleteAll","start","onClick","src","require","Compare","useState","showCompare","setShowCompare","list1","setList1","list2","setList2","songs1","setSongs1","songs2","setSongs2","showRepeated","setShowRepeated","playlistName1","setPlaylistName1","playlistName2","setPlaylistName2","useEffect","AOS","init","hideNonUnique","filterSongs","songs","filter","song","ShowFilterCurrentMode","currFilter","styles","filterModeTitle","type","onChange","event","target","value","includes","pID","replace","substr","changeInput1","changeInput2","req","URL","document","getElementById","display","searchParams","append","fetch","then","res","json","p1","p2","console","log","s1","s2","undefined","array1","map","songItem","dup","array2","alert","comparePlaylist","length","title","idx","key","Math","random","data-aos","color","Home","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64204611.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LandingPagePic.c0fd74ef.png\";","module.exports = __webpack_public_path__ + \"static/media/LandingPagePic3.ff8b45b4.png\";","import React from \"react\";\r\n\r\n\r\nexport default function Songs(props) {\r\n\r\n\r\n    return (\r\n        <li id={props.name} style={{ fontWeight: props.repeated ? 500 : 800, margin: \"1%\" }}>\r\n            {props.name.split('\\n\\n')[0]}<br></br>\r\n            <p>{props.name.split('\\n\\n')[1]}</p>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst StyledHomePage = styled.div`\r\nbackground-color: white;\r\nwidth: 100%;\r\nposition: absolute;\r\n`\r\nconst SytledImage = styled.img`\r\nmax-width: 60%;\r\n@media (max-width: 768px) {\r\n    max-width: 100%;\r\nmargin: auto;\r\n}\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n/* transition: all .25s; \r\nbackground-color: #a0d195;\r\ncolor: white;\r\npadding: 1rem;\r\nborder-style: none;\r\nborder-radius: 1.125rem;\r\nbox-shadow: 0 0.5rem 0.5rem rgb(0 0 0 / 40%);\r\nwidth: 10rem; */\r\ncursor: pointer;\r\n    border-radius: 20px;\r\n    width: 15vmax;\r\n    height: 4vmax;\r\n    background-color: #a0d195;\r\n    box-shadow: 0 20px 20px rgb(0 0 0 / 40%);\r\n    color: #fff;\r\n    border: none;   \r\n    outline: none;\r\n    font-size: 1.6vmax;\r\n    transition: .3s;\r\n    margin-top: 2vh;\r\n    &:hover{\r\n        width: 20vmax;\r\n    }\r\n`\r\nconst StyledHeaderText = styled.h1`\r\nmargin: 1.5rem;\r\nfont-size: 5vh;\r\ncolor: #a0d195;\r\nfont-weight: 700;\r\n@media (max-width: 768px) {\r\n    font-size: 4vh;\r\n}\r\n`\r\nconst DetailsContainer = styled.div`\r\ndisplay: grid;\r\njustify-content: center;\r\ntext-align:center;\r\npadding-bottom: 5vh;\r\n`\r\nconst StyledDetailh2 = styled.h2`\r\nmargin: 1rem 0;\r\ncolor: #a0d195;\r\n/* color: #1a1a1a; */\r\nfont-weight: 600;\r\nfont-size: 5vmin;\r\n@media (max-width: 768px) {\r\n    margin: 1rem;\r\n}\r\n`\r\nconst StyledDetailText = styled.p`\r\nmargin: 1rem 0;\r\ncolor: #1a1a1a;\r\nfont-weight: 300;\r\nfont-size: 1.75vmax;\r\n@media (max-width: 768px) {\r\n    margin: 1rem;\r\n}\r\n\r\n`\r\n\r\nconst StyledImageTextContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: ${props => props.flipped ? \"row\" : \"row-reverse\"};\r\njustify-content: space-evenly;\r\nmargin: 5vmax;\r\n@media (max-width: 768px) {\r\n    flex-direction: column-reverse;\r\n}\r\n`\r\nconst TextComboContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\njustify-content: center;\r\nbackground-color: #f7f7f8;\r\nborder-radius: 5vw;\r\npadding: 0 10vw;\r\n\r\n`\r\nconst TextComboDetails = styled.p`\r\ncolor: #1a1a1a;\r\nfont-weight: 300;\r\nfont-size: 2vmax;\r\n`\r\nconst AuthorCreds = styled.a`\r\ncolor: #1a1a1a;\r\nfont-weight: 300;\r\nfont-size: 1vmax;\r\ntext-decoration: underline;\r\ndisplay: flex;\r\njustify-content: center;\r\npadding: 0 0 1rem 0;\r\n`\r\n\r\nexport const LandingPage = ({ show }) => {\r\n    return (\r\n        <StyledHomePage>\r\n            <StyledHeaderText>Uniquify</StyledHeaderText>\r\n\r\n            <DetailsContainer>\r\n                <StyledDetailh2>\r\n                    <Typewriter\r\n                        onInit={(typewriter) => {\r\n                            typewriter\r\n                                .typeString('Find Similar songs...')\r\n                                .pauseFor(500)\r\n                                .deleteAll()\r\n                                .typeString('Find Unique songs...')\r\n                                .pauseFor(500)\r\n                                .deleteAll()\r\n                                .typeString(\"Find You're Perfect playlist.\")\r\n                                .start();\r\n                        }}\r\n                    />\r\n                </StyledDetailh2>\r\n                <StyledDetailText>Comparing has never been easier.</StyledDetailText>\r\n                <div>\r\n                    <StyledButton onClick={() => show(false)}>Start Comparing</StyledButton>\r\n                </div>\r\n            </DetailsContainer>\r\n\r\n            <StyledImageTextContainer >\r\n                <TextComboContainer >\r\n                    <StyledDetailh2>Contribute</StyledDetailh2>\r\n                    <TextComboDetails>Share your public Spotify playlist.</TextComboDetails>\r\n                </TextComboContainer>\r\n                <SytledImage src={require('../../Assets/LandingPagePic.png')} />\r\n            </StyledImageTextContainer>\r\n\r\n            <StyledImageTextContainer flipped>\r\n                <TextComboContainer >\r\n                    <StyledDetailh2>Analyze</StyledDetailh2>\r\n                    <TextComboDetails>Compare your playlist with others.</TextComboDetails>\r\n                </TextComboContainer>\r\n                <SytledImage src={require('../../Assets/LandingPagePic3.png')} />\r\n            </StyledImageTextContainer>\r\n            <AuthorCreds>Created By Amir Khamesy</AuthorCreds>\r\n        </StyledHomePage>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CompareStyles from \"../CSS/Compare.module.css\";\r\nimport styled from \"styled-components\";\r\nimport Song from \"./Song\";\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { LandingPage } from '../Components/LandingPage';\r\n\r\nexport default function Compare() {\r\n\r\n    const [showCompare, setShowCompare] = useState(true)\r\n    const [list1, setList1] = useState(\"37i9dQZF1DWXT8uSSn6PRy\")\r\n    const [list2, setList2] = useState(\"37i9dQZF1DXcBWIGoYBM5M\")\r\n    const [songs1, setSongs1] = useState([])\r\n    const [songs2, setSongs2] = useState([])\r\n    const [showRepeated, setShowRepeated] = useState(\"all\")\r\n    const [playlistName1, setPlaylistName1] = useState(\"\")\r\n    const [playlistName2, setPlaylistName2] = useState(\"\")\r\n    useEffect(() => {\r\n        AOS.init()\r\n    }, [])\r\n\r\n    const addPlaylistName = (p1, p2) => {\r\n        if (p1, p2) {\r\n\r\n            setPlaylistName1(p1)\r\n            setPlaylistName2(p2)\r\n        }\r\n    }\r\n\r\n    const comparePlaylist = (s1, s2) => {\r\n        if (s1 === undefined || s2 === undefined) {\r\n            alert(\"Invalid playlist ID, please try again!\");\r\n            return;\r\n        }\r\n        let array1 = s1.map(songItem => {\r\n            let dup = false;\r\n            if (s2.includes(songItem)) dup = true\r\n            return {\r\n                name: songItem,\r\n                repeated: dup\r\n            }\r\n        })\r\n        let array2 = s2.map(songItem => {\r\n            let dup = false;\r\n            if (s1.includes(songItem)) dup = true\r\n            return {\r\n                name: songItem,\r\n                repeated: dup\r\n            }\r\n        })\r\n\r\n        setSongs1(array1)\r\n        setSongs2(array2)\r\n    }\r\n    //Starts the comparison \r\n    const handleButtonClick = () => {\r\n        const req = new URL(\"https://uniquify.herokuapp.com/compare/\");\r\n        document.getElementById('loader').style.display = 'block';\r\n        req.searchParams.append(\"song1\", list1);\r\n        req.searchParams.append(\"song2\", list2);\r\n        try {\r\n            fetch(req)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n\r\n                    comparePlaylist(res.songs1, res.songs2);\r\n                    addPlaylistName(res.playlistName1, res.playlistName2);\r\n                    document.getElementById('loader').style.display = 'none';\r\n                })\r\n        } catch {\r\n            console.log(\"failed to fetch\");\r\n        }\r\n    }\r\n\r\n    const hideNonUnique = () => {\r\n        if (showRepeated === \"all\") {\r\n            setShowRepeated(\"unique\")\r\n        } else if (showRepeated === \"unique\") {\r\n            setShowRepeated(\"repeated\")\r\n        } else {\r\n            setShowRepeated(\"all\")\r\n        }\r\n    }\r\n\r\n    const changeInput1 = (event) => {\r\n        //Change playlist ID URI\r\n        if (event.target.value.includes(\"spotify:playlist:\")) {\r\n            var pID = event.target.value.replace(\"spotify:playlist:\", \"\");\r\n            setList1(pID)\r\n            //Chance playlist ID link\r\n        } else if (event.target.value.includes(\"https://open.spotify.com/playlist/\")) {\r\n            var pID = event.target.value.substr(34, 22);\r\n            setList1(pID)\r\n            //Assume its raw playlist ID\r\n        } else {\r\n            setList1(event.target.value)\r\n        }\r\n    }\r\n    const changeInput2 = (event) => {\r\n        //Change playlist ID URI\r\n        if (event.target.value.includes(\"spotify:playlist:\")) {\r\n            var pID = event.target.value.replace(\"spotify:playlist:\", \"\");\r\n            setList2(pID)\r\n            //Chance playlist ID link\r\n        } else if (event.target.value.includes(\"https://open.spotify.com/playlist/\")) {\r\n            var pID = event.target.value.substr(34, 22);\r\n            setList2(pID)\r\n            //Assume its raw playlist ID\r\n        } else {\r\n            setList2(event.target.value)\r\n        }\r\n    }\r\n    const filterSongs = (songs) => {\r\n        if (showRepeated === \"all\") {\r\n            return songs.filter(song => !song.repeated)\r\n        } else if (showRepeated === \"unique\") {\r\n            return songs.filter(song => song.repeated)\r\n        } else {\r\n            return songs\r\n        }\r\n    }\r\n\r\n    const ShowFilterCurrentMode = () => {\r\n        let currFilter = showRepeated === \"unique\" ? \"repeated\" : showRepeated === \"repeated\" ? \"unique\" : 'all';\r\n        return (\r\n            <p onClick={hideNonUnique} style={styles.filterModeTitle}>\r\n                Showing {currFilter} songs\r\n            </p>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                showCompare ?\r\n                    <LandingPage show={setShowCompare} />\r\n                    :\r\n                    <div>\r\n                        <input type=\"text\" id='playList1' onChange={event => changeInput1(event)}></input>\r\n                        <input type=\"text\" id='playList2' onChange={event => changeInput2(event)}></input><br></br>\r\n\r\n                        <button onClick={handleButtonClick}>Get list</button><br></br>\r\n                        <div id=\"loader\"></div>\r\n                        {songs1.length > 0 && songs2.length > 0 &&\r\n                            <ShowFilterCurrentMode />\r\n                        }\r\n                        <ol title={playlistName1} onClick={hideNonUnique}>\r\n                            {songs1 && songs1.length > 0 &&\r\n                                filterSongs(songs1).map((song, idx) =>\r\n                                    <div key={\"SongDiv\" + idx + + Math.random()} data-aos=\"fade-down\"><Song name={song[\"name\"]} repeated={song[\"repeated\"]} key={song[\"name\"] + Math.random()} />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </ol>\r\n                        <ol title={playlistName2} onClick={hideNonUnique}>\r\n                            {songs2 && songs2.length > 0 &&\r\n                                filterSongs(songs2).map((song, idx) =>\r\n                                    <div key={\"SongDiv\" + idx + Math.random() + 1.1} data-aos=\"fade-down\">\r\n                                        <Song name={song[\"name\"]} repeated={song[\"repeated\"]} key={song[\"name\"] + Math.random() + 1.1} />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </ol>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst styles = {\r\n    filterModeTitle: {\r\n        color: \"white\"\r\n    }\r\n}","import React from 'react';\nimport '../CSS/App.css';\nimport Compare from \"../Components/Compare\";\n\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <Compare />\n    </div>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './CSS/index.css';\r\nimport Home from './Pages/Home';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Text, Image } from 'grommet'\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { StyleSheetManager } from 'styled-components';\r\n\r\n// const styles = {\r\n//   link: {\r\n//     textDecoration: 'none',\r\n//     color: 'white',\r\n//   },\r\n\r\n// }\r\nAOS.init()\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <Home />\r\n    {/* <Router>\r\n      <Box direction=\"row\" justify='between' margin={{ right: 'auto' }}>\r\n        <Box direction='column'>\r\n          <Link to=\"/\" style={styles.link}>\r\n            <Box direction='row-responsive' className=\"typewriter\">\r\n              <h1>Uniquify</h1>\r\n            </Box>\r\n          </Link>\r\n        </Box>\r\n        <Box direction='column' >\r\n          <Link to=\"/compare\" style={styles.link}>\r\n            <Box\r\n              height=\"xsmall\"\r\n              round='medium'\r\n              elevation='xlarge'\r\n              width=\"xsmall\"\r\n              overflow='hidden'>\r\n              <Image src=\"https://cdn.shopify.com/app-store/listing_images/47509b0ae6effab2437add3d7c7dcfa9/icon/CNr7nL30lu8CEAE=.png\"></Image>\r\n            </Box>\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n      <Route path='/' exact component={LandingPage}></Route>\r\n      <Route path='/compare' exact component={Home}></Route>\r\n    </Router> */}\r\n  </React.StrictMode >,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}